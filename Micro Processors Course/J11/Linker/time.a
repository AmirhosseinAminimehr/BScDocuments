;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 5/28/2019
;Author  : admin
;Company : IUST
;Comments:
;
;
;Chip type               : ATmega1280
;Program type            : Application
;AVR Core Clock frequency: 11.059200 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 2048
;*****************************************************/
;
;#include <mega1280.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// I2C Bus functions
;#include <i2c.h>
;
;// DS1307 Real Time Clock functions
;#include <ds1307.h>
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;// delay include
;#include <delay.h>
;
;#include <stdlib.h>
;// Declare your global variables here
;
;void main(void)
; 0000 002A {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 002B // Declare your local variables here
; 0000 002C unsigned char second[1],minute[1],hour[1],day[1],month[1],year[1],day_num[1];
; 0000 002D char s_second [3],s_minute [3],s_hour [3],s_day [3],s_month [3],s_year [3],s_day_num [3];
; 0000 002E // Crystal Oscillator division factor: 1
; 0000 002F #pragma optsize-
; 0000 0030 CLKPR=0x80;
;PCODE: $0000000E VOL: 0
;	second -> Y+27
;	minute -> Y+26
;	hour -> Y+25
;	day -> Y+24
;	month -> Y+23
;	year -> Y+22
;	day_num -> Y+21
;	s_second -> Y+18
;	s_minute -> Y+15
;	s_hour -> Y+12
;	s_day -> Y+9
;	s_month -> Y+6
;	s_year -> Y+3
;	s_day_num -> Y+0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0031 CLKPR=0x00;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0032 #ifdef _OPTIMIZE_SIZE_
; 0000 0033 #pragma optsize+
; 0000 0034 #endif
; 0000 0035 
; 0000 0036 // Input/Output Ports initialization
; 0000 0037 // Port A initialization
; 0000 0038 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0039 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 003A PORTA=0x00;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 003B DDRA=0x00;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 003C 
; 0000 003D // Port B initialization
; 0000 003E // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 003F // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0040 PORTB=0x00;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0041 DDRB=0x00;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0042 
; 0000 0043 // Port C initialization
; 0000 0044 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0045 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0046 PORTC=0x00;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0047 DDRC=0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0048 
; 0000 0049 // Port D initialization
; 0000 004A // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 004B // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 004C PORTD=0x00;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 004D DDRD=0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 004E 
; 0000 004F // Port E initialization
; 0000 0050 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0051 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0052 PORTE=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0053 DDRE=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0054 
; 0000 0055 // Port F initialization
; 0000 0056 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0057 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0058 PORTF=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0059 DDRF=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 005A 
; 0000 005B // Port G initialization
; 0000 005C // Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 005D // State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 005E PORTG=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 005F DDRG=0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0060 
; 0000 0061 // Port H initialization
; 0000 0062 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0063 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0064 PORTH=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0065 DDRH=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0066 
; 0000 0067 // Port J initialization
; 0000 0068 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0069 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 006A PORTJ=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 006B DDRJ=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 006C 
; 0000 006D // Port K initialization
; 0000 006E // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 006F // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0070 PORTK=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0071 DDRK=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0072 
; 0000 0073 // Port L initialization
; 0000 0074 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0075 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0076 PORTL=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0077 DDRL=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0078 
; 0000 0079 // I2C Bus initialization
; 0000 007A // I2C Port: PORTD
; 0000 007B // I2C SDA bit: 1
; 0000 007C // I2C SCL bit: 0
; 0000 007D // Bit Rate: 100 kHz
; 0000 007E // Note: I2C settings are specified in the
; 0000 007F // Project|Configure|C Compiler|Libraries|I2C menu.
; 0000 0080 i2c_init();
;PCODE: $0000003F VOL: 0
; 0000 0081 
; 0000 0082 // DS1307 Real Time Clock initialization
; 0000 0083 // Square wave output on pin SQW/OUT: Off
; 0000 0084 // SQW/OUT pin state: 0
; 0000 0085 rtc_init(0,0,0);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0086 
; 0000 0087 // Alphanumeric LCD initialization
; 0000 0088 // Connections are specified in the
; 0000 0089 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 008A // RS - PORTA Bit 0
; 0000 008B // RD - PORTA Bit 1
; 0000 008C // EN - PORTA Bit 2
; 0000 008D // D4 - PORTA Bit 4
; 0000 008E // D5 - PORTA Bit 5
; 0000 008F // D6 - PORTA Bit 6
; 0000 0090 // D7 - PORTA Bit 7
; 0000 0091 // Characters/line: 16
; 0000 0092 lcd_init(16);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0093 
; 0000 0094 
; 0000 0095 /*
; 0000 0096 void rtc_get_time(unsigned char *hour,unsigned char *min,unsigned char *sec);
; 0000 0097 void rtc_set_time(unsigned char hour,unsigned char min,unsigned char sec);
; 0000 0098 void rtc_get_date(unsigned char *week_day, unsigned char *day,unsigned char *month,unsigned char *year);
; 0000 0099 void rtc_set_date(unsigned char week_day, unsigned char day,unsigned char month,unsigned char year);
; 0000 009A   */
; 0000 009B 
; 0000 009C 
; 0000 009D //rtc_set_time(5,23,40);
; 0000 009E //rtc_set_date(1, 28, 4,19);
; 0000 009F 
; 0000 00A0 while (1)
;PCODE: $00000048 VOL: 0
; 0000 00A1       {
; 0000 00A2 
; 0000 00A3          rtc_get_date(day_num,day,month,year);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 00A4          rtc_get_time(hour,minute,second);
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 00A5          itoa(second[0], s_second);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 00A6          itoa(minute[0], s_minute);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 00A7          itoa(hour[0], s_hour);
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 00A8          itoa(day_num[0], s_day_num);
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 00A9          itoa(day[0], s_day);
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 00AA          itoa(month[0], s_month);
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 00AB          itoa(year[0], s_year);
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 00AC          lcd_puts("time:");
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 00AD          lcd_puts(s_hour);
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 00AE          lcd_puts(" ")  ;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 00AF          lcd_puts(s_minute);
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 00B0          lcd_puts(" ")  ;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 00B1          lcd_puts(s_second);
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 00B2 
; 0000 00B3          lcd_gotoxy(0,1);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 00B4 
; 0000 00B5 
; 0000 00B6 
; 0000 00B7 
; 0000 00B8          //lcd_puts(s_day_num);
; 0000 00B9          lcd_puts("date:");
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 00BA          lcd_puts(s_year);
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 00BB          lcd_puts(" ");
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 00BC          lcd_puts(s_month);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 00BD          lcd_puts(" ");
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 00BE          lcd_puts(s_day);
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 00BF 
; 0000 00C0          delay_ms(1000);
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 00C1          lcd_clear();
;PCODE: $0000009E VOL: 0
; 0000 00C2 
; 0000 00C3       }
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 00C4 }
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0

	.DSEG
_0x6:
	.BYTE 0x14
