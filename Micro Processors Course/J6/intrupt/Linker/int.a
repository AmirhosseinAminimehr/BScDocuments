;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 4/16/2019
;Author  : admin
;Company : IUST
;Comments:
;
;
;Chip type               : ATmega1280
;Program type            : Application
;AVR Core Clock frequency: 11.059200 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 2048
;*****************************************************/
;
;#include <mega1280.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <delay.h>
;#include <stdlib.h>
;#include <stdint.h>
;uint8_t n = 0;
;char text[8];
;
;// External Interrupt 2 service routine
;interrupt [EXT_INT2] void ext_int2_isr(void)
; 0000 0022 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0023     n++;
;PCODE: $0000000F VOL: 0
; 0000 0024     delay_ms(500);
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0025     EIFR=0x04;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0026 
; 0000 0027 }
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;
;// External Interrupt 3 service routine
;interrupt [EXT_INT3] void ext_int3_isr(void)
; 0000 002B {
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 002C     n--;
;PCODE: $00000019 VOL: 0
; 0000 002D     delay_ms(500);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 002E     EIFR=0x08;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 002F }
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;
;// Declare your global variables here
;
;void main(void)
; 0000 0034 {
;PCODE: $00000021 VOL: 0
; 0000 0035 // Declare your local variables here
; 0000 0036 
; 0000 0037 // Crystal Oscillator division factor: 1
; 0000 0038 #pragma optsize-
; 0000 0039 CLKPR=0x80;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 003A CLKPR=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 003B #ifdef _OPTIMIZE_SIZE_
; 0000 003C #pragma optsize+
; 0000 003D #endif
; 0000 003E 
; 0000 003F // Input/Output Ports initialization
; 0000 0040 // Port A initialization
; 0000 0041 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0042 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0043 PORTA=0x00;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0044 DDRA=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0045 
; 0000 0046 // Port B initialization
; 0000 0047 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0048 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0049 PORTB=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 004A DDRB=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 004B 
; 0000 004C // Port C initialization
; 0000 004D // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 004E // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 004F PORTC=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0050 DDRC=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0051 
; 0000 0052 // Port D initialization
; 0000 0053 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0054 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0055 PORTD=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0056 DDRD=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0057 
; 0000 0058 // Port E initialization
; 0000 0059 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 005A // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 005B PORTE=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 005C DDRE=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 005D 
; 0000 005E // Port F initialization
; 0000 005F // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0060 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0061 PORTF=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0062 DDRF=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0063 
; 0000 0064 // Port G initialization
; 0000 0065 // Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0066 // State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0067 PORTG=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0068 DDRG=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0069 
; 0000 006A // Port H initialization
; 0000 006B // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 006C // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 006D PORTH=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 006E DDRH=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 006F 
; 0000 0070 // Port J initialization
; 0000 0071 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0072 // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 0073 PORTJ=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0074 DDRJ=0xFF;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0075 
; 0000 0076 // Port K initialization
; 0000 0077 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0078 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0079 PORTK=0x00;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 007A DDRK=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 007B 
; 0000 007C // Port L initialization
; 0000 007D // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 007E // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 007F PORTL=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0080 DDRL=0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0081 
; 0000 0082 // External Interrupt(s) initialization
; 0000 0083 // INT0: Off
; 0000 0084 // INT1: Off
; 0000 0085 // INT2: On
; 0000 0086 // INT2 Mode: Falling Edge
; 0000 0087 // INT3: On
; 0000 0088 // INT3 Mode: Falling Edge
; 0000 0089 // INT4: Off
; 0000 008A // INT5: Off
; 0000 008B // INT6: Off
; 0000 008C // INT7: Off
; 0000 008D EICRA=0xA0;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 008E EICRB=0x00;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 008F EIMSK=0x0C;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0090 EIFR=0x0C;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0091 // PCINT0 interrupt: Off
; 0000 0092 // PCINT1 interrupt: Off
; 0000 0093 // PCINT2 interrupt: Off
; 0000 0094 // PCINT3 interrupt: Off
; 0000 0095 // PCINT4 interrupt: Off
; 0000 0096 // PCINT5 interrupt: Off
; 0000 0097 // PCINT6 interrupt: Off
; 0000 0098 // PCINT7 interrupt: Off
; 0000 0099 // PCINT8 interrupt: Off
; 0000 009A // PCINT9 interrupt: Off
; 0000 009B // PCINT10 interrupt: Off
; 0000 009C // PCINT11 interrupt: Off
; 0000 009D // PCINT12 interrupt: Off
; 0000 009E // PCINT13 interrupt: Off
; 0000 009F // PCINT14 interrupt: Off
; 0000 00A0 // PCINT15 interrupt: Off
; 0000 00A1 // PCINT16 interrupt: Off
; 0000 00A2 // PCINT17 interrupt: Off
; 0000 00A3 // PCINT18 interrupt: Off
; 0000 00A4 // PCINT19 interrupt: Off
; 0000 00A5 // PCINT20 interrupt: Off
; 0000 00A6 // PCINT21 interrupt: Off
; 0000 00A7 // PCINT22 interrupt: Off
; 0000 00A8 // PCINT23 interrupt: Off
; 0000 00A9 PCMSK0=0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 00AA PCMSK1=0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 00AB PCMSK2=0x00;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 00AC PCICR=0x00;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 00AD 
; 0000 00AE // Alphanumeric LCD initialization
; 0000 00AF // Connections are specified in the
; 0000 00B0 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 00B1 // RS - PORTA Bit 0
; 0000 00B2 // RD - PORTA Bit 1
; 0000 00B3 // EN - PORTA Bit 2
; 0000 00B4 // D4 - PORTA Bit 4
; 0000 00B5 // D5 - PORTA Bit 5
; 0000 00B6 // D6 - PORTA Bit 6
; 0000 00B7 // D7 - PORTA Bit 7
; 0000 00B8 // Characters/line: 16
; 0000 00B9 lcd_init(16);
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 00BA 
; 0000 00BB // Global enable interrupts
; 0000 00BC #asm("sei")
;PCODE: $00000064 VOL: 0
	sei
;PCODE: $00000065 VOL: 0
; 0000 00BD lcd_clear();
;PCODE: $00000066 VOL: 0
; 0000 00BE while (1)
;PCODE: $00000067 VOL: 0
; 0000 00BF       {
; 0000 00C0         lcd_gotoxy(5, 0);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 00C1         itoa(n, text);
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 00C2         lcd_puts(text);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 00C3         lcd_puts("  ");
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 00C4       }
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 00C5 }
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0

	.DSEG
_0x6:
	.BYTE 0x3
